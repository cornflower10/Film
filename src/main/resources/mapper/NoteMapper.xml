<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiangpw.mapper.NoteMapper">
    <resultMap id="BaseResultMap" type="com.jiangpw.entity.Note">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="imgid" jdbcType="INTEGER" property="imgid"/>
        <result column="favorid" jdbcType="INTEGER" property="favorid"/>
        <result column="labelid" jdbcType="INTEGER" property="labelid"/>
        <result column="reviewid" jdbcType="INTEGER" property="reviewid"/>
        <result column="categoryid" jdbcType="INTEGER" property="categoryid"/>
        <result column="createtiem" jdbcType="TIMESTAMP" property="createtiem"/>
        <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jiangpw.entity.Note">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <resultMap id="noteDetail" type="com.jiangpw.entity.Note">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="createtiem" jdbcType="TIMESTAMP" property="createtiem"/>

        <association property="favor" javaType="com.jiangpw.entity.Favor">
            <result column="likecount" jdbcType="INTEGER" property="likecount"/>
            <result column="unlikecount" jdbcType="INTEGER" property="unlikecount"/>
        </association>

        <association property="category" javaType="com.jiangpw.entity.Category">
            <result column="name" jdbcType="VARCHAR" property="name"/>
        </association>

        <association property="user" javaType="com.jiangpw.entity.User">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="img" jdbcType="VARCHAR" property="img"/>
        </association>

        <collection property="imgs" ofType="com.jiangpw.entity.Img">
            <result column="url" jdbcType="VARCHAR" property="url"/>
        </collection>
    </resultMap>
    <select id="getNotes" parameterType="java.lang.Integer" resultMap="noteDetail">
     SELECT n.id, n.content, n.createtiem, f.likecount, f.unlikecount, c.name,u.username, u.img, i.url, u.id
     FROM note
     AS n
     LEFT JOIN favor AS f ON n.favorid = f.id
     LEFT JOIN category AS c ON n.categoryid = c.id
     LEFT JOIN user AS u ON n.userid = u.id
     LEFT JOIN img AS i ON n.id = i.noteid
     WHERE n.categoryid = #{id,jdbcType=INTEGER}
    </select>
    <select id="getNotesByUserId" parameterType="java.lang.Integer" resultMap="noteDetail">
        SELECT n.id, n.content, n.createtiem, f.likecount, f.unlikecount, c.name,u.username, u.img, i.url, u.id
        FROM note
        AS n
        LEFT JOIN favor AS f ON n.favorid = f.id
        LEFT JOIN category AS c ON n.categoryid = c.id
        LEFT JOIN user AS u ON n.userid = u.id
        LEFT JOIN img AS i ON n.id = i.noteid
        WHERE n.userid = #{userid,jdbcType=INTEGER}
        LIMIT 1,4
    </select>
    <select id="selectLast" resultMap="BaseResultMap">
        SELECT  * FROM note order by id DESC limit 1
    </select>
    <select id="selectNoteById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT  * FROM note
        WHERE id = #{id,jdbcType=INTEGER}
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userid, imgid, favorid, labelid, reviewid, categoryid, createtiem, updatetime
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.jiangpw.entity.NoteExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from note
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.jiangpw.entity.NoteExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from note
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from note
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from note
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jiangpw.entity.Note" useGeneratedKeys="true">
    insert into note (userid, imgid, favorid, 
      labelid, reviewid, categoryid, 
      createtiem, updatetime, content
      )
    values (#{userid,jdbcType=INTEGER}, #{imgid,jdbcType=INTEGER}, #{favorid,jdbcType=INTEGER}, 
      #{labelid,jdbcType=INTEGER}, #{reviewid,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}, 
      #{createtiem,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jiangpw.entity.Note"
            useGeneratedKeys="true">
        insert into note
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userid,
            </if>
            <if test="imgid != null">
                imgid,
            </if>
            <if test="favorid != null">
                favorid,
            </if>
            <if test="labelid != null">
                labelid,
            </if>
            <if test="reviewid != null">
                reviewid,
            </if>
            <if test="categoryid != null">
                categoryid,
            </if>
            <if test="createtiem != null">
                createtiem,
            </if>
            <if test="updatetime != null">
                updatetime,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="imgid != null">
                #{imgid,jdbcType=INTEGER},
            </if>
            <if test="favorid != null">
                #{favorid,jdbcType=INTEGER},
            </if>
            <if test="labelid != null">
                #{labelid,jdbcType=INTEGER},
            </if>
            <if test="reviewid != null">
                #{reviewid,jdbcType=INTEGER},
            </if>
            <if test="categoryid != null">
                #{categoryid,jdbcType=INTEGER},
            </if>
            <if test="createtiem != null">
                #{createtiem,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jiangpw.entity.Note">
        update note
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
            <if test="imgid != null">
                imgid = #{imgid,jdbcType=INTEGER},
            </if>
            <if test="favorid != null">
                favorid = #{favorid,jdbcType=INTEGER},
            </if>
            <if test="labelid != null">
                labelid = #{labelid,jdbcType=INTEGER},
            </if>
            <if test="reviewid != null">
                reviewid = #{reviewid,jdbcType=INTEGER},
            </if>
            <if test="categoryid != null">
                categoryid = #{categoryid,jdbcType=INTEGER},
            </if>
            <if test="createtiem != null">
                createtiem = #{createtiem,jdbcType=TIMESTAMP},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jiangpw.entity.Note">
    update note
    set userid = #{userid,jdbcType=INTEGER},
      imgid = #{imgid,jdbcType=INTEGER},
      favorid = #{favorid,jdbcType=INTEGER},
      labelid = #{labelid,jdbcType=INTEGER},
      reviewid = #{reviewid,jdbcType=INTEGER},
      categoryid = #{categoryid,jdbcType=INTEGER},
      createtiem = #{createtiem,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.jiangpw.entity.Note">
    update note
    set userid = #{userid,jdbcType=INTEGER},
      imgid = #{imgid,jdbcType=INTEGER},
      favorid = #{favorid,jdbcType=INTEGER},
      labelid = #{labelid,jdbcType=INTEGER},
      reviewid = #{reviewid,jdbcType=INTEGER},
      categoryid = #{categoryid,jdbcType=INTEGER},
      createtiem = #{createtiem,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>